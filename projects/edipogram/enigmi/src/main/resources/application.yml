# application.yml
--- 
spring:
  application: 
    name: enigmi
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 45s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 
  datasource:
    url: jdbc:postgresql://localhost:5438/enigmidb
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: create
    #database-platform: org.hibernate.dialect.PostgreSQL82Dialect
    show-sql: true
  main:
    web-application-type: NONE
  kafka:
    bootstrap-servers: ${DOCKER_HOST_IP:10.11.1.121}:9092
    #KAFKA PRODUCER
    producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
    producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


#MESSAGING
asw:
  edipogram:
    enigmi:
      channel:
        out: enigmi-service-event-channel
      group-id: simple-producer

   
server: 
  port: ${PORT:${SERVER_PORT:0}}
#  port: 8080

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false
